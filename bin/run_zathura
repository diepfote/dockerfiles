#!/usr/bin/env bash

set -o pipefail  # propagate errors
set -u  # exit on undefined
set -e  # exit on non-zero return value
#set -f  # disable globbing/filename expansion
shopt -s failglob  # error on unexpaned globs

trap 'set +x' EXIT


source ~/Documents/scripts/source-me/common-functions.sh


[ -z "$*" ] && command=(bash) || command=("$@")


if [ "$(uname)" = Darwin ]; then
  set +e  # start container even if the interface does not have an ip assigned
  ip="$(ifconfig en0  | grep -E 'inet\b' | sed 's#.*inet ##;s# netmask.*##')"
  display_number="$(basename "$(find-sorted /tmp/.X11-unix/ | tail -n1)" | sed 's#X##')"

  xhost + "$ip"
  set -e
  # same as: host.lima.internal
  DISPLAY="$ip":"$display_number"
else
  DISPLAY="$DISPLAY"
fi

set -x

docker run \
  -v /tmp:/tmp:ro \
  -v "$PWD":/pwd:ro \
  -w /pwd \
  -v ~/Documents/books\&documentation:/books:ro \
  -v ~/Documents/cheatsheets:/cheatsheets:ro \
  -e DISPLAY="$DISPLAY" \
  -v /tmp/.X11-unix:/tmp/.X11-unix \
  --security-opt=no-new-privileges \
  --cap-drop=ALL \
  --rm \
  -it \
  --name zathura \
  zathura \
  "${command[@]}" || docker exec -it zathura bash  # try exec on failure

